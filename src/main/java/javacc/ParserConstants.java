/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package  javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ADD = 5;
  /** RegularExpression Id. */
  int AND = 6;
  /** RegularExpression Id. */
  int ASSIGN = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int CLASS = 9;
  /** RegularExpression Id. */
  int COMMER = 10;
  /** RegularExpression Id. */
  int DOT = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int EXTENDS = 13;
  /** RegularExpression Id. */
  int FALSE = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int INT = 16;
  /** RegularExpression Id. */
  int LBRACE = 17;
  /** RegularExpression Id. */
  int LBRACK = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int LPAREN = 20;
  /** RegularExpression Id. */
  int LT = 21;
  /** RegularExpression Id. */
  int MAIN = 22;
  /** RegularExpression Id. */
  int NEW = 23;
  /** RegularExpression Id. */
  int NOT = 24;
  /** RegularExpression Id. */
  int NUM = 25;
  /** RegularExpression Id. */
  int OUT = 26;
  /** RegularExpression Id. */
  int PRINTLN = 27;
  /** RegularExpression Id. */
  int PUBLIC = 28;
  /** RegularExpression Id. */
  int RBRACE = 29;
  /** RegularExpression Id. */
  int RBRACK = 30;
  /** RegularExpression Id. */
  int RETURN = 31;
  /** RegularExpression Id. */
  int RPAREN = 32;
  /** RegularExpression Id. */
  int SEMI = 33;
  /** RegularExpression Id. */
  int STATIC = 34;
  /** RegularExpression Id. */
  int STRING = 35;
  /** RegularExpression Id. */
  int SUB = 36;
  /** RegularExpression Id. */
  int SYSTEM = 37;
  /** RegularExpression Id. */
  int THIS = 38;
  /** RegularExpression Id. */
  int TIMES = 39;
  /** RegularExpression Id. */
  int TRUE = 40;
  /** RegularExpression Id. */
  int VOID = 41;
  /** RegularExpression Id. */
  int WHILE = 42;
  /** RegularExpression Id. */
  int ID = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int LINE_COMMENT = 46;
  /** RegularExpression Id. */
  int MULTILINE_COMMENT = 47;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"+\"",
    "\"&&\"",
    "\"=\"",
    "\"boolean\"",
    "\"class\"",
    "\",\"",
    "\".\"",
    "\"else\"",
    "\"extends\"",
    "\"false\"",
    "\"if\"",
    "\"int\"",
    "\"{\"",
    "\"[\"",
    "\"length\"",
    "\"(\"",
    "\"<\"",
    "\"main\"",
    "\"new\"",
    "\"!\"",
    "<NUM>",
    "\"out\"",
    "\"println\"",
    "\"public\"",
    "\"}\"",
    "\"]\"",
    "\"return\"",
    "\")\"",
    "\";\"",
    "\"static\"",
    "\"String\"",
    "\"-\"",
    "\"System\"",
    "\"this\"",
    "\"*\"",
    "\"true\"",
    "\"void\"",
    "\"while\"",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "<LINE_COMMENT>",
    "<MULTILINE_COMMENT>",
  };

}
